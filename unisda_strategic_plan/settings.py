"""
Django settings for unisda_strategic_plan project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from django.urls import reverse_lazy

LOGIN_URL = reverse_lazy("login")  # Redirect to login if unauthenticated
LOGOUT_REDIRECT_URL = '/'

# Optional: Customize 403 error handler for insufficient permissions
HANDLER403 = "strategic_planning.views.permission_denied"
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(w_qmw%fk83el74=_5r#t*s%l7jl$$#@-xtk#14u%u%yg%9ckv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'strategic_planning',
]
AUTH_USER_MODEL = 'strategic_planning.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'unisda_strategic_plan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # ref our templates folder
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'strategic_planning.context_processors.strategic_themes',
                'strategic_planning.context_processors.strategic_objectives_context',       
            ],
        },
    },
]

WSGI_APPLICATION = 'unisda_strategic_plan.wsgi.application'
LOGIN_REDIRECT_URL = '/'  
LOGIN_URL = 'user_login'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'planning_db',
        'USER': 'root',
        'PASSWORD': 'kapz.kapz123',
        'HOST': 'localhost', 
        'PORT': '3306',      
    }
}

JAZZMIN_SETTINGS = {
    "site_title": "Unisda Strategic Plan Admin",
    "site_header": "Unisda Admin",
    "site_brand": "Unisda",
    "site_logo": "img/logo.png",  # Replace with your static logo path
    "login_logo": None,
    "welcome_sign": "Welcome to the Unisda Strategic Plan Admin Dashboard",
    "copyright": "Unisda",
    "search_model": "auth.User",  # Enable search for specific models
    "user_avatar": None,  # User avatar field in your user model

    # Custom top menu links
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"app": "strategic_planning"},  # Link to your app
    ],

    # Custom side menu
    "usermenu_links": [
        {"name": "Support", "url": "https://support.example.com", "new_window": True},
        {"model": "auth.user"},
    ],

    # Additional options
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
    },
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": True,
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


#static files in root dir
STATICFILES_DIRS = [BASE_DIR / "static"]  # ref our static folder
STATIC_ROOT = BASE_DIR / 'staticfiles' 

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
